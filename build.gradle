plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "org.ajoberstar.grgit" version "4.1.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = project.maven_group
archivesBaseName = project.archives_base_name
version = "${project.mod_version}${getVersionMetadata()}" as Object

loom {
    accessWidenerPath = file("src/main/resources/smart-recipes.accesswidener")
}

// To change the versions see the gradle.properties file
dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    def fabricModProperties = [
        "version": version,
        "minecraft": ">=${project.minecraft_version.split(/[+ -]/)[0]}"
    ]

    filesMatching("fabric.mod.json") {
        expand fabricModProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    // Ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    it.options.release.set(17)
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE.md"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            pom {
                name = "Smart Recipes"
                description = "A Fabric mod that extends recipe format with conditions."
            }
        }
    }

    repositories {
        maven {
            name "GitHub"
            url "https://maven.pkg.github.com/Kir-Antipov/smart-recipes"
            credentials {
                username = project.findProperty("GITHUB_ACTOR") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

@SuppressWarnings("GrMethodMayBeStatic") // It cannot
String getVersionMetadata() {
    String metadata = "+${project.minecraft_version}"

    // Release builds don't require additional metadata
    String release_tag = System.getenv("RELEASE_TAG")
    if (release_tag != null && release_tag.length() != 0) {
        return metadata
    }

    String build_id = System.getenv("GITHUB_RUN_NUMBER")
    if (build_id != null && build_id.length() != 0) {
        // GitHub CI builds only
        metadata += "+build.${build_id}"
    } else if (grgit != null) {
        def head = grgit.head()
        def id = head.abbreviatedId

        // Flag the build if the build tree is not clean
        if (!grgit.status().clean) {
            id += "-dirty"
        }

        metadata += "+rev.${id}"
    } else {
        // No tracking information could be found about the build
        metadata += "+unknown"
    }

    return metadata
}
